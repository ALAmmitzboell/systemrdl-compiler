================================================================================
SystemRDL spec issues
================================================================================
Semantic rule 10.6.1.c is violated in 5.1.2.2.2-Example 2
    Rule 10.6.1.c states that accesswidth cannot be greater than regwidth.
    
    However, in the example:
        reg 'a' has an implied regwidth of 32
        reg 'a' gets assigned an accesswidth of 64 via default
        accesswidth > regwidth!
    
    Resolution:
        The use-case shown in the example seems reasonable.
        Rule 10.6.1.c seems unnecessary. Waiving checks for it.

--------------------------------------------------------------------------------
Likely typo in semantic rule 11.2-f
    "Virtual registers, REGISTER FILES, and fields shall have the same software access (sw property value) as the parent memory."
    
    Mentions "register files", even though they are not allowed in "mem" components
    as per 11.1-b-1-ii.

--------------------------------------------------------------------------------
Example in 6.2.6 uses an invalid hierarchical reference
    In section 6.2.6, an example shows a child component definition incorrectly 
    inheriting a parameter from its parent lexical scope:
        regfile some_regfile #( my_struct arg ) {
            reg {
                desc = arg.inner.foo ; // <-- Illegal out-of-scope reference to 'arg'
                field {} a ;
            } regA ;
        } ;
    
    This is inconsistent with the namespace rules described in 5.1.4
    Also, 5.1.1.2-d explicitly says that nested component definitions do not inherit
    parents' parameters.

--------------------------------------------------------------------------------
Grammar does not allow empty array literals
    The grammar in appendix B.10 shows that an array literal's 'array_literal_body'
    requires at one or more instances of a 'constant_expression'
    
    Section 6.3.1-d states that empty array literals are allowed to be declared
    using the following:
        left_hand_side = '{}
    However based on appendix B.10, this is grammatically incorrect.
    
    Resolution:
        Arrays of zero-size seem like a reasonable concept, especially since 6.3.1-d
        explicitly makes note of them. Grammar will be revised to allow this.